введение

setup (class Engine) : теория + реализация
"нужно рассказать про реализацию класса: цикл, ввод, обновление, отрисовка, delta time"

реализация примитивов (вершина, треугольник, модель) : теория + реализация
"вершина(состоят из 3 кординат), треугольник(состоят из 3 вершин и задаются по часовой стрелке, модель(задаётся вектором треугольников))

матрицы и матрица проекции (экран(-1, 1), матрица проекции(проекция(область видимости, как объекты должны себя вести), зависимость от оси z, масштабирование(нормализация проекции под соотношение сторон экрана)), умножение векторов на матрицы) : теория + реализация
"рассказываем теорию про матрицы, вычисление матрицы проекции, умножение векторов на матрицы и реализуем это в коде"

проекция треугольников на экран : реализация
"отображаем модель(треугольники) на экран (вычисляем(домножаем на матрицу проекции, масштабируем под экран(x, y), смещаем(z)), отрисовываем)"

ещё больше матриц (масштабирование, вращение, перемещение) : реализация
"добавляем нужные матрицы и применяем их"

удаляем треугольники (нормали, векторное и скалярное произведения, камера(жалкая пародия)) : теория + реализация
"расказываем про нормали, как находить всякуе хрень с векторами и добавляем класс камеры(только для направления), тем самым не отображаем задние полигоны"

освещение (заливка треугольников, цвет треугольников, яркость в зависимости от света) : реализация
"добавляем классы света и цвета и просчитываем освещение"

импорт моделек (.obj) : реализация
"добавляем возможность загрузки моделей из .obj файлов"

сортировка (алгоритм художника, теория про z-buffer) : теория + реализация
"расказываем, что треугольники надо сортировать и вкидываем инфу про то, что алоритм говно и надо юзать z-buffer, но это будет после"